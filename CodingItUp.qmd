The Eras Tour (Taylor Swift): 37i9dQZF1DX0D996ZXujBy
Music of the Spheres Tour (Coldplay): 08iPDhTh0lVHhJfb4PlYg7
Farewell Yellow Brick Road (Elton John): 35xTEkkxtb6HG5Ekrs3Weq
Divide Tour (Ed Sheeran): 0z7jpWUKsXGJKAr1jPT6TJ
360 degrees tour (U2): 2i4RrDDRrjCiZPK7u0mC6l
Love On Tour (Harry Styles): 0nGAxpspEuFVN41NJtsbqd
+-=Ã·x Tour (Ed Sheeran): 54SV4xiry4qbOhWhStFuRk
Not in This Lifetime... Tour (Guns n Roses): 0JTPSLTRlueygxYUZBZsxK
Renaissance Tour (Beyonce): 59HEFq5MTQnL15aMiy256x
A Bigger Bang Tour (The Rolling Stones): 42KCvNJIUSdzAZyZSPSxbE
No Filter Tour (The Rolling Stones): 2Q1bREtYAvn2bA2VCV2Lws
A Head Full of Dreams Tour (Coldplay): 7gjMetNaSzrULiFfg82o7K
Summer Carnival (P!nk): 5s0m7X05Le1APAVOMXozVS
The Wall Live (Roger Waters): 4bwDALUCGomY6xRJRvo3Un
Black Ice World Tour (AC/DC): 6yMtPXxICqPJzqnX11dnvD ***includes encore***
WorldWired Tour (Metallica): 5fkZFNe5tSzZE3WrxwxzhC
Sticky & Sweet Tour (Madonna): 0Y4Kj7njDZ6An4SSi9sSr2
Beautiful Trauma World Tour (P!nk): 0IOqgNJX3k9aPeLMIYhpxh
The Joshua Tree Tours 2017 & 2019 (U2): 4jpUeNiMgahRfNlAde3Shw
Vertigo Tour (U2): 2TDIyyayjko0cnS00459ui


```{r}
library(spotifyr)
library(dplyr)
library(purrr)
```

```{r}
# fill in with personal client_ID and client_secret
#Sys.setenv(SPOTIFY_CLIENT_ID = 'xxxxxxxxxxxxxxxxxxxxx')
#Sys.setenv(SPOTIFY_CLIENT_SECRET = 'xxxxxxxxxxxxxxxxxxxxx')

access_token <- get_spotify_access_token()
```

Logging all of our spotifyIDs into one vector:
```{r}
playlist_ids <- c(c("37i9dQZF1DX0D996ZXujBy"), c("08iPDhTh0lVHhJfb4PlYg7"), c("35xTEkkxtb6HG5Ekrs3Weq"), c("0z7jpWUKsXGJKAr1jPT6TJ"),
                  c("2i4RrDDRrjCiZPK7u0mC6l"), c("0nGAxpspEuFVN41NJtsbqd"), c("54SV4xiry4qbOhWhStFuRk"), c("0JTPSLTRlueygxYUZBZsxK"),
                  c("59HEFq5MTQnL15aMiy256x"), c("42KCvNJIUSdzAZyZSPSxbE"), c("2Q1bREtYAvn2bA2VCV2Lws"), c("7gjMetNaSzrULiFfg82o7K"),
                  c("5s0m7X05Le1APAVOMXozVS"), c("6yMtPXxICqPJzqnX11dnvD"), c("5fkZFNe5tSzZE3WrxwxzhC"), c("0IOqgNJX3k9aPeLMIYhpxh"),
                  c("4jpUeNiMgahRfNlAde3Shw"), c("2TDIyyayjko0cnS00459ui"))
```

```{r}
wrangle_data_func <- function(spotifyid){
  get_playlist_audio_features(
    "spotify", 
    playlist_uris = spotifyid, 
    access_token # spotify developer credentials
    ) |>
  # take out unnecessary columns
  select(-c(playlist_owner_id, added_at, is_local, primary_color, added_by.href, added_by.id, added_by.type, added_by.uri, 
            added_by.external_urls.spotify,track.preview_url, track.available_markets, track.type, track.episode, track.track,
            track.disc_number, track.href, track.is_local, track.album.available_markets, track.album.type, track.album.album_type,
            track.album.href, track.album.release_date_precision, track.album.artists, track.album.external_urls.spotify,
            track.external_ids.isrc, track.external_urls.spotify, video_thumbnail.url )) |>
  # create new cols to tell us where we are in the setlist
  mutate(setlist_song_num = row_number(),
         prop_thru_set = setlist_song_num / n())
}

# as list of separate data, use `map_df()` if want one big list
all_playlists <- map(playlist_ids, wrangle_data_func)
```