### Graphing Data (regarding the Oscar Formula)
```{r}
library(ggplot2)
library(dplyr)
library(tidyverse)
```

```{r}
# pre-processing data frame to use for graphs
graph_data_pre75 <- all_data |>
  filter(year_ceremony >= 1975) |>
  mutate(genre_ids = genres,
         release_day_val = as.double(paste0(substr(release_date,6,7),".", substr(release_date,9,10)))) |>
  select(-spoken_languages, -production_countries, -production_companies, 
         -belongs_to_collection, -genres)
```

```{r}
saveRDS(graph_data_pre75, "graph_data_pre75.rds")
```

```{r}
# graphing the genre data (one year, all categories)
graph_genre_one_year <- function(selected_year){
  graph_data_pre75$winner <- factor(graph_data_pre75$winner, levels = c("True", "False"))
  
  graph_data_pre75 |>
    filter(year_ceremony == selected_year) |>
    unnest(genre_ids) |>
    distinct() |>
    mutate(genre_ids = genres_dict[as.character(genre_ids)]) |>
    ggplot(aes(x = genre_ids, fill = winner, alpha = winner)) + 
    geom_bar(position = "stack") +
    theme_minimal() + 
    xlab("Genre") + 
    ylab("Count") + 
    scale_fill_manual(values = c("False" = "black", "True" = "#af9150")) + 
    scale_alpha_manual(values = c("False" = 0.9, "True" = 1)) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1),
          axis.title = element_text(color = "black", face = "bold"), # Dark and bold axis titles
          axis.text = element_text(color = "black"))                # Dark axis text)
}
graph_genre_one_year(2024)
```

```{r}
# graphing the genre data (all years, one category)
graph_genre_all_years <- function(){
  graph_data_pre75 |>
    filter(category == "BEST PICTURE") |>
    unnest(genre_ids) |>
    distinct() |>
    mutate(genre_ids = genres_dict[as.character(genre_ids)]) |>
    ggplot(aes(x = year_film, y = genre_ids, color = winner, alpha = winner)) + 
    geom_jitter(position = position_jitter(width = 0.1, height = 0.2),
                size = 2) +
    xlab("Year") + 
    ylab("Genres") + 
    scale_color_manual(values = c("True" = "#af9150", "False" = "black")) + 
    scale_alpha_manual(values = c("True" = 1, "False" = 0.47)) +
    theme_minimal() + 
    theme(axis.title = element_text(color = "black", face = "bold"), # Dark and bold axis titles
          axis.text = element_text(color = "black"))
}
graph_genre_all_years()
```

```{r}
graph_one_year_scatter <- function(feature, selected_year, x_axis, y_axis) {
    graph_data_pre75 |>
      filter(year_ceremony == selected_year) |>
      ggplot(aes(x = !!sym(feature), y = 0, color = winner, alpha = winner)) +
      geom_jitter(position = position_jitter(height = 0.1),
                  size = 2) + 
      xlab(x_axis) + 
      scale_color_manual(values = c("True" = "#af9150", "False" = "black")) + 
      scale_alpha_manual(values = c("True" = 1, "False" = 0.47)) +
      theme_minimal() + 
      theme(axis.title = element_text(color = "black", face = "bold"), # Dark and bold axis titles
            axis.text = element_text(color = "black"))
  }
graph_one_year_scatter("budget", 2020, "Budget", "")
graph_one_year_scatter("release_day_val", 2020, "Release Day (month.day)", "")
```

```{r}
graph_one_year_box <- function(feature, selected_year){
  graph_data_pre75 |>
    filter(year_ceremony == as.integer(selected_year)) |>
    ggplot(aes(x = winner, y = !!sym(feature), color = winner)) +
    geom_boxplot() + 
    theme_minimal()
}
graph_one_year_box("release_day_val", 2020)
graph_one_year_box("budget", 2020)
```

```{r}
# graphing the release date data (all years, one category)
graph_all_years <- function(feature, x_axis, y_axis){
  graph_data_pre75 |>
    filter(category == "BEST PICTURE") |>
    ggplot(aes(x = year_film, y = !!sym(feature), color = winner, alpha = winner)) +
    geom_jitter(position = position_jitter(height = 0.1),
                size = 2) + 
    xlab(x_axis) + 
    ylab(y_axis) + 
    scale_color_manual(values = c("True" = "#af9150", "False" = "black")) + 
    scale_alpha_manual(values = c("True" = 1, "False" = 0.47)) +
    theme_minimal() + 
    theme(axis.title = element_text(color = "black", face = "bold"), # Dark and bold axis titles
          axis.text = element_text(color = "black"))
}
graph_all_years("release_day_val", "Year", "Release Day (month.day)")
graph_all_years("budget", "Year", "Budget")
```

